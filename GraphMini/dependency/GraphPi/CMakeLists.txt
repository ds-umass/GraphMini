CMAKE_MINIMUM_REQUIRED(VERSION 3.20)
PROJECT(GraphMining)
INCLUDE_DIRECTORIES(include)
SET(CMAKE_BUILD_TYPE Debug)
SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
SET(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} -O3 -Wall")
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/libs)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin)
find_package(OpenMP REQUIRED)
find_package(MPI REQUIRED)
if(APPLE)
    set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -mno-omit-leaf-frame-pointer")
    set(OpenMP_C "${CMAKE_C_COMPILER}")
    set(OpenMP_C_FLAGS "-Xclang -fopenmp -I/usr/local/opt/libomp/include")
    set(OpenMP_C_LIB_NAMES "libomp")
    set(OpenMP_libomp_LIBRARY "omp")

    set(OpenMP_CXX "${CMAKE_CXX_COMPILER}")
    set(OpenMP_CXX_FLAGS "-Xclang -fopenmp -I/usr/local/opt/libomp/include")
    set(OpenMP_CXX_LIB_NAMES "libomp")
    set(OpenMP_libomp_LIBRARY "omp")
    link_directories("/usr/local/opt/libomp/lib/")
    include_directories("usr/local/opt/libomp/include")
endif()
link_libraries(OpenMP::OpenMP_CXX MPI::MPI_CXX)
ADD_SUBDIRECTORY(src)
ADD_SUBDIRECTORY(tianhe)
MESSAGE("CMAKE_CXX_COMPILER = " ${CMAKE_CXX_COMPILER})
MESSAGE("CMAKE_CXX_FLAGS = " ${CMAKE_CXX_FLAGS})
MESSAGE("CMAKE_CXX_FLAGS_RELEASE = " ${CMAKE_CXX_FLAGS_RELEASE})
MESSAGE("CMAKE_CXX_FLAGS_DEBUG = " ${CMAKE_CXX_FLAGS_DEBUG})
MESSAGE("CMAKE_EXE_LINKER_FLAGS" = ${CMAKE_EXE_LINKER_FLAGS})
MESSAGE("PROJECT BINARY DIR = " ${PROJECT_BINARY_DIR})
MESSAGE("INCLUDE DIRECTORIES = " ${CPLUS_INCLUDE_PATH})
MESSAGE("CMAKE_BUILD_TYPE = " ${CMAKE_BUILD_TYPE})
MESSAGE("CMAKE_INSTALL_PREFIX = " ${CMAKE_INSTALL_PREFIX})
MESSAGE(STATUS "Run: ${MPIEXEC} ${MPIEXEC_NUMPROC_FLAG} ${MPIEXEC_MAX_NUMPROCS} ${MPIEXEC_PREFLAGS} EXECUTABLE ${MPIEXEC_POSTFLAGS} ARGS")